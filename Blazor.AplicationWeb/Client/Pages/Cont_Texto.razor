@page "/conteudos"
@using System.Collections.Generic

<h3>Conteúdos</h3>

<div class="page-wrapper">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Invoices</h3>
            </div>
            <div class="card-body border-bottom py-3">
                <div class="d-flex">
                    <div class="text-muted">
                        Show
                        <div class="mx-2 d-inline-block">
                            <input type="text" class="form-control form-control-sm" value="8" size="3" aria-label="Invoices count">
                        </div>
                        entries
                    </div>
                    <div class="ms-auto text-muted">
                        Search:
                        <div class="ms-2 d-inline-block">
                            <input type="text" class="form-control form-control-sm" aria-label="Search invoice">
                        </div>
                    </div>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table card-table table-vcenter text-nowrap datatable">
                    <thead>
                        <tr>
                            <th class="w-1"><input class="form-check-input m-0 align-middle" type="checkbox" aria-label="Select all invoices"></th>
                            <th class="w-1">
                                No. <!-- Download SVG icon from http://tabler-icons.io/i/chevron-up -->
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-sm icon-thick" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M6 15l6 -6l6 6" /></svg>
                            </th>
                            <th>Invoice Subject</th>
                            <th>Client</th>
                            <th>VAT No.</th>
                            <th>Created</th>
                            <th>Status</th>
                            <th>Price</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (conteudos != null && conteudos.Any())
                        {
                            @foreach (var conteudo in conteudos.Skip((PaginaAtual - 1) * ItensPorPagina).Take(ItensPorPagina))
                            {
                                <tr>
                                    <td><input class="form-check-input m-0 align-middle" type="checkbox" aria-label="Select invoice"></td>
                                    <td><span class="text-muted">001401</span></td>
                                    <td><a href="invoice.html" class="text-reset" tabindex="-1">Design Works</a></td>
                                    <td>                                        
                                        @conteudo.Value.Titulo
                                    </td>
                                    <td>
                                        87956621
                                    </td>
                                    <td>
                                        15 Dec 2017
                                    </td>
                                    <td>
                                        <span class="badge bg-success me-1"></span> Paid
                                    </td>
                                    <td>$887</td>
                                    <td class="text-end">
                                        <span class="dropdown">
                                            <button class="btn dropdown-toggle align-text-top" data-bs-boundary="viewport" data-bs-toggle="dropdown">Actions</button>
                                            <div class="dropdown-menu dropdown-menu-end">
                                                <a class="dropdown-item" href="#">
                                                    Action
                                                </a>
                                                <a class="dropdown-item" href="#">
                                                    Another action
                                                </a>
                                            </div>
                                        </span>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="card-footer d-flex align-items-center">
                <p class="m-0 text-muted">Showing <span>1</span> to <span>8</span> of <span>16</span> entries</p>
                <ul class="pagination m-0 ms-auto">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true">
                            <!-- Download SVG icon from http://tabler-icons.io/i/chevron-left -->
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M15 6l-6 6l6 6" /></svg>
                            prev
                        </a>
                    </li>
                    <li class="page-item"><a class="page-link" href="#">1</a></li>
                    <li class="page-item active"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item"><a class="page-link" href="#">4</a></li>
                    <li class="page-item"><a class="page-link" href="#">5</a></li>

                    @if (conteudos != null && conteudos.Any())
                    {
                        @*<button class="btn btn-primary" disabled="@PaginaAnteriorDesabilitada" @onclick="IrParaPaginaAnterior">Anterior</button>*@
                        <span> Página @PaginaAtual de @TotalPaginas </span>
                        <li class="page-item">
                            <button class="page-link" @onclick="IrParaProximaPagina">
                                next <!-- Download SVG icon from http://tabler-icons.io/i/chevron-right -->
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M9 6l6 6l-6 6" /></svg>
                            </button>
                        </li>
                    }
                    else
                    {
                        <p>Sem conteúdos disponíveis.</p>
                    }
                    
                </ul>
            </div>
        </div>
    </div>
</div>

@if (conteudos != null && conteudos.Any())
{
    

    <button class="btn btn-primary" disabled="@PaginaAnteriorDesabilitada" @onclick="IrParaPaginaAnterior">Anterior</button>
    <span> Página @PaginaAtual de @TotalPaginas </span>
    <button class="btn btn-primary" disabled="@ProximaPaginaDesabilitada" @onclick="IrParaProximaPagina">Próxima</button>
}
else
{
    <p>Sem conteúdos disponíveis.</p>
}

@code {
    private Dictionary<int, (string Titulo, string Descricao)> conteudos;
    private int PaginaAtual = 1;
    private int TotalPaginas;
    private bool PaginaAnteriorDesabilitada = true;
    private bool ProximaPaginaDesabilitada = false;
    private int ItensPorPagina = 10;

    protected override void OnInitialized()
    {
        // Aqui você carrega os conteúdos da fonte de dados
        // Exemplo de carregamento de dados fictícios
        CarregarConteudos();
    }

    private void CarregarConteudos()
    {
        // Aqui você carrega os conteúdos da fonte de dados
        // Para este exemplo, estou usando dados fictícios
        conteudos = new Dictionary<int, (string, string)>();

        for (int i = 1; i <= 100; i++)
        {
            conteudos.Add(i, ($"Título {i}", $"Descrição do conteúdo {i}"));
        }

        AtualizarPaginacao();
    }

    private void AtualizarPaginacao()
    {
        TotalPaginas = (int)Math.Ceiling((double)conteudos.Count / ItensPorPagina);
        PaginaAnteriorDesabilitada = PaginaAtual == 1;
        ProximaPaginaDesabilitada = PaginaAtual == TotalPaginas;
    }

    private void IrParaPaginaAnterior()
    {
        PaginaAtual--;
        AtualizarPaginacao();
    }

    private void IrParaProximaPagina()
    {
        PaginaAtual++;
        AtualizarPaginacao();
    }
}
